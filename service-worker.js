"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","67792be7b9fa37cf272f376a723f8460"],["/static/js/0.57579311.chunk.js","f8928ef1e9e4559f82010bf02188da49"],["/static/js/1.5c37a46e.chunk.js","2029a9e665115421cad7ea8825ac5700"],["/static/js/2.aeb2282d.chunk.js","a56865e4bdbb1d9038718f0377f5ac03"],["/static/js/3.ce9f21e5.chunk.js","bf248e8a9a1b8bca8f6040dbbceced9e"],["/static/js/4.5b341a8a.chunk.js","e46c34f9fc2b33ecb04b8b558e82b275"],["/static/js/5.8230fa57.chunk.js","2ab95734da2e9783438ec42b9865565b"],["/static/js/6.ce0a5765.chunk.js","7bad048cecd1505a1852b9c49ab2d555"],["/static/js/7.50cbbf9a.chunk.js","9e90bd43b70205b8b94b444e5ffb1e94"],["/static/js/8.aa8fc931.chunk.js","96cba95ac9db737f6d8c49be179d9947"],["/static/js/9.56064749.chunk.js","2510c5bd104236cdc92db3984c6e3835"],["/static/js/main.f3c9b99a.js","e5bd3893c1e1bdc2e76ec0c98feadf60"],["/static/media/Free_Reiki_Course_long_light_text.7a397906.png","7a39790648c2f52404ec6907efb131b8"],["/static/media/Seam-less-Texture-Pack.005b81c8.jpg","005b81c809e44e9b0f8222495b3628fb"],["/static/media/animalReiki.f2b652ff.jpg","f2b652ffb95b8c1a7582cfef3dca90e3"],["/static/media/buda-2742383_small.c49375dc.jpg","c49375dc2a893753c2ec963bd3795867"],["/static/media/folow_on_facebook.9edcfaf8.jpg","9edcfaf82950f59105d707a61f06c1a5"],["/static/media/meditation-2214532_small.59925823.jpg","599258230894f968a806c846e8018676"],["/static/media/mink-mingle-245029_small.1790224b.jpg","1790224bb83c9a5c97d8ea409b91d4a2"],["/static/media/oldWebsiteImage.7ad3d1d3.jpg","7ad3d1d3b12e3a9b88e08a27bec8e22c"],["/static/media/reikiLevel3Video.50f78868.jpg","50f78868794481722b7f793c9ab40815"],["/static/media/why_reiki_is_good_for_you_small.56fd5b91.jpg","56fd5b9114383139d27de13b91ac791d"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});